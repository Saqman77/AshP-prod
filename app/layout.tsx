import type { Metadata } from "next";
import "./globals.scss";
import { ThemeContextProvider } from "./utils/ThemeContextProvider";
import { client } from "./sanity/client";
import { SanityProvider, SiteSettings } from "./lib/sanityContext";
import {
  candara,
  euphorigenic,
  quicksand,
  poppins,
  comfortaa,
  nunitoSans,
} from "./lib/fonts";
import Header from "./components/Header/Header";
import Footer from "./components/Footer/Footer";
import LenisProvider from "./utils/lenis-provider";
// import ScrollToTop from "./utils/ScrollToTop";
// import gsap from "gsap";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const SITE_SETTINGS_QUERY = `*[_type == "siteSettings"][0] {
  logo { "url": asset->url, alt },
  callToAction {
      title,
      description,
      bgImageLeft {
        "url": asset->url
      },
      bgImageRight {
        "url": asset->url
      },
  },
  footer {
    headingPart1,
    headingPart2,
    text,
    socialLinks [] { "url": asset->url, alt, href },
  },
  contactButton { text, icon {"url": asset->url} },
  scheduleButton { text, icon {"url": asset->url} }
}`;
const options = { next: { revalidate: 120 } };

// Register plugins
// gsap.registerPlugin(ScrollTrigger);

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const siteSettings = await client.fetch<SiteSettings>(
    SITE_SETTINGS_QUERY,
    {},
    options
  );
  if (!siteSettings) {
  return (
    <html lang="en">
      <body>
        <div>Failed to Load Data</div>
      </body>
    </html>
  );
}
  return (
    <html lang="en">
      <body
        className={`${candara.className} ${euphorigenic.className} ${quicksand.className} ${poppins.className} ${comfortaa.className} ${nunitoSans.className}`}
      >
        <ThemeContextProvider>
          <LenisProvider>
            {/* <ScrollToTop /> */}
            <div className="main">
              <SanityProvider initialData={siteSettings}>
                <Header />
                {children}
                <Footer />
              </SanityProvider>
            </div>
          </LenisProvider>
        </ThemeContextProvider>
      </body>
    </html>
  );
}
